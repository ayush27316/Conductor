Conductor

create events and distribute tickets
conductor follows hexagonal architecture where it exposes
interfaces for external services like payments.

conductor is built on a reactive core. if a ticket generation is
requested it forwards the payment request to payment service asynchronously
meanwhile payment request is getting completed conductor can serve other requests
like event details/metrics.


Core:
Main domain model and logic

Ports:
Exposes interfaces that can be implemented to support additional services
like logging, notifications etc

Adapters:
implmentaions of ports. Adpaters adds Ports as dependencies with a scope "provided"
(provided by the core)

Core depends on ports and adapters. Adpaters provide implementaions of ports as spring beans
which are scanned and injected into the core. So implementaion of ports must be annoted using
@Component.